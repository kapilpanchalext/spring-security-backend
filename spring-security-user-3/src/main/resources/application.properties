spring.application.name=${SPRING_APP_NAME:spring-security-user-3}
server.port=${SERVER_PORT:9001}

spring.kafka.bootstrap-servers=${KAFKA_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=${CONSUMER_GROUP:default-task-Group}
spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=${KAFKA_KEY_SERIALIZER:org.apache.kafka.common.serialization.IntegerSerializer}
spring.kafka.producer.value-serializer=${KAFKA_VALUE_SERIALIZER:org.springframework.kafka.support.serializer.JsonSerializer}


#spring.security.user.name=${SECURITY_USERNAME:app}
#spring.security.user.password=${SECURITY_PASSWORD:1234}

#spring.config.import=application_prod.properties
spring.profiles.active=default

spring.datasource.url=jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME:student_database}
spring.datasource.username=${DATABASE_USERNAME:root}
spring.datasource.password=${DATABASE_PASSWORD:admin}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:true}
spring.jpa.generate-ddl=${GENERATE_DATABASE_TABLES:true}
spring.jpa.hibernate.ddl-auto=${CREATE_UPDATE_DATABASE_TABLES:update}

server.servlet.session.timeout=${SESSION_TIMEOUT:20m}

logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:TRACE}
logging.pattern.console=${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}

#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWK_SET_URI:http://localhost:9002/realms/application1_realm/protocol/openid-connect/certs}